library (PPDK_Standard_Library_0.65V_25C_TYP_X1) {
  /* Models written by Liberate 19.2.1.591 from Cadence Design Systems, Inc. on Sat Jun  1 09:44:43 CEST 2024 */
  comment : "";
  date : "$Date: Sat Jun  1 09:44:18 2024 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1nW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 0.65);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 1e+06;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 0.65;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (TT) {
    process : 1;
    temperature : 25;
    voltage : 0.65;
  }
  default_operating_conditions : TT;
  lu_table_template (constraintX1_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 2000, 5000");
    index_2 ("1000, 2000, 5000");
  }
  lu_table_template (delayX1_3x3) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 2000, 5000");
    index_2 ("10000, 15000, 20000");
  }
  lu_table_template (mpw_constraintX1_3x3) {
    variable_1 : constrained_pin_transition;
    index_1 ("1000, 2000, 5000");
  }
  power_lut_template (passive_powerX1_3x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 2000, 5000");
  }
  power_lut_template (powerX1_3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 2000, 5000");
    index_2 ("10000, 15000, 20000");
  }
cell (NAND2X1) {
    area : 247860;
    cell_leakage_power : 1840.64;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 6900.23;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 150.146;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 207.214;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 104.967;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 1840.64;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "1";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      three_state : "(A1 * !A2)";
      max_capacitance : 20000;
      capacitance : 36827.5;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.02306e+06, 1.18033e+06, 1.33052e+06", \
            "1.02304e+06, 1.18014e+06, 1.33051e+06", \
            "1.02291e+06, 1.18013e+06, 1.33029e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "997380, 1.19894e+06, 1.40244e+06", \
            "997399, 1.19887e+06, 1.40249e+06", \
            "997286, 1.19887e+06, 1.40242e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "1.55697e+06, 1.6673e+06, 1.77303e+06", \
            "1.55698e+06, 1.66718e+06, 1.77309e+06", \
            "1.55683e+06, 1.66718e+06, 1.77314e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "981099, 1.0693e+06, 1.1627e+06", \
            "981040, 1.06926e+06, 1.16275e+06", \
            "981012, 1.06922e+06, 1.16279e+06" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.33432e+06, 1.49021e+06, 1.64005e+06", \
            "1.3343e+06, 1.49019e+06, 1.64081e+06", \
            "1.33433e+06, 1.48983e+06, 1.64033e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.65878e+06, 1.85387e+06, 2.05256e+06", \
            "1.65878e+06, 1.85387e+06, 2.05212e+06", \
            "1.65878e+06, 1.85488e+06, 2.05263e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "2.10936e+06, 2.23334e+06, 2.35056e+06", \
            "2.10935e+06, 2.23318e+06, 2.35056e+06", \
            "2.10964e+06, 2.23307e+06, 2.35083e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "1.10942e+06, 1.1919e+06, 1.27995e+06", \
            "1.10939e+06, 1.19193e+06, 1.27995e+06", \
            "1.10919e+06, 1.19198e+06, 1.27974e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4186.58, 3990.19, 3791.17", \
            "4190.71, 3994.06, 3795.17", \
            "4203, 4006.49, 3807.11" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "23250.1, 22954.6, 22658.6", \
            "23246, 22950.4, 22654", \
            "23233.5, 22937.9, 22641.6" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "122.669, 121.8, 120.078", \
            "126.798, 125.636, 124.273", \
            "139.333, 138.286, 136.456" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "27650.2, 27328.8, 27006.7", \
            "27646.1, 27324.7, 27002.2", \
            "27633.4, 27311.9, 26989.6" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6158.74, 5952.53, 5745.63", \
            "6162.88, 5956.67, 5751.48", \
            "6175.6, 5968.43, 5762.64" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "26331.7, 25938.2, 25564.7", \
            "26327.4, 25934.2, 25560.5", \
            "26314.5, 25921.7, 25547.3" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "-268.235, -278.223, -287.912", \
            "-264.083, -274.074, -281.738", \
            "-251.324, -262.271, -270.506" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("46827.5, 51827.5, 56827.5");
          values ( \
            "33128.8, 32716.5, 32324.3", \
            "33124.5, 32712.6, 32320.1", \
            "33111.6, 32700.2, 32307.1" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 93.1568;
      rise_capacitance : 93.1568;
      rise_capacitance_range (35.3887, 176.116);
      fall_capacitance : 93.1576;
      fall_capacitance_range (35.3887, 176.122);
      internal_power () {
        when : "(!A2 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "2043.33, 2043.34, 2044.32" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "5292.16, 5292.15, 5291.14" \
          );
        }
      }
      internal_power () {
        when : "(!A2 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4712.79, 4712.88, 4715.98" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "2651.28, 2651.2, 2648.08" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.2882;
      rise_capacitance : 94.2882;
      rise_capacitance_range (35.605, 176.508);
      fall_capacitance : 94.3429;
      fall_capacitance_range (35.607, 176.61);
      internal_power () {
        when : "(!A1 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6127.23, 6127.18, 6127.32" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4461.28, 4461.33, 4461.37" \
          );
        }
      }
      internal_power () {
        when : "(!A1 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "11179.3, 11179.2, 11180.5" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "-520.002, -519.984, -520.682" \
          );
        }
      }
    }
  }
cell (NOR2X1) {
    area : 399500;
    cell_leakage_power : 5958.03;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 8062.31;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 7682.14;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 7682.14;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 405.541;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 5958.03;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(!A1 * !A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.32498e+06, 1.49645e+06, 1.66434e+06", \
            "1.32499e+06, 1.49644e+06, 1.66434e+06", \
            "1.32506e+06, 1.49644e+06, 1.66431e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.39988e+06, 1.60348e+06, 1.80955e+06", \
            "1.39988e+06, 1.60348e+06, 1.80956e+06", \
            "1.39987e+06, 1.60251e+06, 1.80956e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.34003e+06, 1.40253e+06, 1.46167e+06", \
            "1.34004e+06, 1.40254e+06, 1.46167e+06", \
            "1.34008e+06, 1.4026e+06, 1.46176e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "675979, 712995, 751051", \
            "675978, 713005, 751052", \
            "675987, 712987, 750903" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.32498e+06, 1.49645e+06, 1.66434e+06", \
            "1.32499e+06, 1.49644e+06, 1.66434e+06", \
            "1.32506e+06, 1.49644e+06, 1.66431e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.39988e+06, 1.60348e+06, 1.80955e+06", \
            "1.39988e+06, 1.60348e+06, 1.80956e+06", \
            "1.39987e+06, 1.60251e+06, 1.80956e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.34003e+06, 1.40253e+06, 1.46167e+06", \
            "1.34004e+06, 1.40254e+06, 1.46167e+06", \
            "1.34008e+06, 1.4026e+06, 1.46176e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "675979, 712995, 751051", \
            "675978, 713005, 751052", \
            "675987, 712987, 750903" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "7109.3, 6964.65, 6822.83", \
            "7113.87, 6969.18, 6827.35", \
            "7127.71, 6982.75, 6840.79" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "16656.2, 16465.1, 16275.9", \
            "16651.7, 16460.6, 16271.4", \
            "16637.9, 16446, 16257.3" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1012.39, 966.242, 925.098", \
            "1016.98, 970.785, 929.624", \
            "1031.02, 984.517, 943.227" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "22841.4, 22598.8, 22358.4", \
            "22836.8, 22594.2, 22353.9", \
            "22823.1, 22579.8, 22339.4" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "7109.3, 6964.65, 6822.83", \
            "7113.87, 6969.18, 6827.35", \
            "7127.71, 6982.75, 6840.79" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "16656.2, 16465.1, 16275.9", \
            "16651.7, 16460.6, 16271.4", \
            "16637.9, 16446, 16257.3" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1012.39, 966.242, 925.098", \
            "1016.98, 970.785, 929.624", \
            "1031.02, 984.517, 943.227" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "22841.4, 22598.8, 22358.4", \
            "22836.8, 22594.2, 22353.9", \
            "22823.1, 22579.8, 22339.4" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5254;
      rise_capacitance : 94.5254;
      rise_capacitance_range (35.6325, 177.039);
      fall_capacitance : 94.5373;
      fall_capacitance_range (35.633, 177.047);
      internal_power () {
        when : "(A2 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "241566, 241566, 241566" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "230664, 230664, 230665" \
          );
        }
      }
      internal_power () {
        when : "(A2 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "245099, 245098, 245098" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "227132, 227132, 227132" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5254;
      rise_capacitance : 94.5254;
      rise_capacitance_range (35.6325, 177.039);
      fall_capacitance : 94.5373;
      fall_capacitance_range (35.633, 177.047);
      internal_power () {
        when : "(A1 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "241566, 241566, 241566" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "230664, 230664, 230665" \
          );
        }
      }
      internal_power () {
        when : "(A1 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "245099, 245098, 245098" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "227132, 227132, 227132" \
          );
        }
      }
    }
  }
cell (INVX1) {
    area : 228420;
    cell_leakage_power : 3944.02;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 7680.31;
      when : "(A * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 207.736;
      when : "(!A * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 3944.02;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "!A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "900613, 1.06702e+06, 1.22884e+06", \
            "900043, 1.06636e+06, 1.22797e+06", \
            "897276, 1.06404e+06, 1.22582e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "787148, 1.00503e+06, 1.22442e+06", \
            "787234, 1.0058e+06, 1.22442e+06", \
            "787176, 1.00547e+06, 1.22356e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "220545, 256811, 292550", \
            "221159, 257448, 293196", \
            "223025, 259298, 295084" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "136672, 174591, 212512", \
            "136672, 174591, 212512", \
            "136672, 174593, 212513" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3705.96, 3588.16, 3467.37", \
            "3705.92, 3588.8, 3468.36", \
            "3705.61, 3590.49, 3471.31" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4789.76, 4656.49, 4519.28", \
            "4781.63, 4648.52, 4511.43", \
            "4757.2, 4624.92, 4488.1" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "-1004.18, -1013.91, -1035.86", \
            "-995.159, -1014.85, -1037.07", \
            "-972.371, -915.692, -1030.65" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "9640.57, 9481.67, 9319.52", \
            "9639.51, 9477.6, 9313.33", \
            "9596.38, 9449.57, 9299.31" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 12877.4;
      rise_capacitance : 12877.4;
      rise_capacitance_range (11944, 13720.6);
      fall_capacitance : 12882;
      fall_capacitance_range (11950.6, 13719.9);
    }
  }
cell (LATCHX1) {
    area : 586500;
    cell_leakage_power : 9649.12;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 15364.7;
      when : "(R * S * !Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(R * S * !Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 8446.76;
      when : "(R * !S * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(R * !S * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 8446.76;
      when : "(!R * S * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * S * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 7993.69;
      when : "(!R * !S * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * !S * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 7993.69;
      when : "(!R * !S * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * !S * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 9649.12;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "!R";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~R & S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58768e+06, 1.64216e+06, 1.695e+06", \
            "1.58769e+06, 1.64217e+06, 1.69501e+06", \
            "1.58771e+06, 1.64218e+06, 1.69498e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "834282, 867879, 902439", \
            "834283, 867880, 902439", \
            "834282, 867904, 902438" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58721e+06, 1.64169e+06, 1.6945e+06", \
            "1.58722e+06, 1.6417e+06, 1.69451e+06", \
            "1.58727e+06, 1.64171e+06, 1.69448e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "834296, 867878, 902441", \
            "834297, 867878, 902441", \
            "834283, 867924, 902440" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.076e+06, 2.25321e+06, 2.42652e+06", \
            "2.07604e+06, 2.25324e+06, 2.42635e+06", \
            "2.07611e+06, 2.25297e+06, 2.42644e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.23929e+06, 2.43333e+06, 2.63221e+06", \
            "2.23932e+06, 2.43334e+06, 2.6314e+06", \
            "2.23933e+06, 2.43202e+06, 2.63142e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58768e+06, 1.64216e+06, 1.695e+06", \
            "1.58769e+06, 1.64217e+06, 1.69501e+06", \
            "1.58771e+06, 1.64218e+06, 1.69498e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "834282, 867879, 902439", \
            "834283, 867880, 902439", \
            "834282, 867904, 902438" \
          );
        }
      }
      timing () {
        related_pin : "R";
        sdf_cond : "S";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "S";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.4503e+06, 1.50777e+06, 1.56322e+06", \
            "1.45031e+06, 1.50777e+06, 1.56319e+06", \
            "1.45038e+06, 1.50781e+06, 1.56318e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "836957, 870735, 905668", \
            "836956, 870734, 905629", \
            "836962, 870732, 905470" \
          );
        }
      }
      timing () {
        related_pin : "R";
        sdf_cond : "~S";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!S";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.45038e+06, 1.50792e+06, 1.56353e+06", \
            "1.45039e+06, 1.50792e+06, 1.56363e+06", \
            "1.45047e+06, 1.50796e+06, 1.56344e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "859622, 891708, 925385", \
            "859620, 891707, 925169", \
            "859632, 891704, 925373" \
          );
        }
      }
      timing () {
        related_pin : "R";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.73973e+06, 1.91168e+06, 2.08089e+06", \
            "1.73974e+06, 1.91168e+06, 2.08089e+06", \
            "1.73978e+06, 1.91167e+06, 2.08085e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.26753e+06, 2.46548e+06, 2.6673e+06", \
            "2.26754e+06, 2.46549e+06, 2.6673e+06", \
            "2.26758e+06, 2.46625e+06, 2.6673e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.45038e+06, 1.50792e+06, 1.56353e+06", \
            "1.45039e+06, 1.50792e+06, 1.56363e+06", \
            "1.45047e+06, 1.50796e+06, 1.56344e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "859622, 891708, 925385", \
            "859620, 891707, 925169", \
            "859632, 891704, 925373" \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational_rise;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.48445e+06, 3.69734e+06, 3.90465e+06", \
            "3.48447e+06, 3.69736e+06, 3.90446e+06", \
            "3.48414e+06, 3.69644e+06, 3.90447e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.44087e+06, 2.63594e+06, 2.83615e+06", \
            "2.44075e+06, 2.63594e+06, 2.83599e+06", \
            "2.4415e+06, 2.63616e+06, 2.83634e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "S";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "46191.5, 46017, 45844", \
            "46187.2, 46012.7, 45839.7", \
            "46174, 45999.6, 45826" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "S";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "50764.1, 50494.4, 50226.5", \
            "50759.8, 50490.1, 50222.1", \
            "50746.6, 50477.1, 50208.4" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "!S";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "17210.2, 17015.5, 16824.8", \
            "17209.8, 17015.1, 16824.7", \
            "17208.7, 17014, 16822.8" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "!S";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "19115.6, 18968.6, 18825", \
            "19115.3, 18968.3, 18825.1", \
            "19114.5, 18967.6, 18823.9" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "78281.3, 78079.9, 77878.4", \
            "78285.7, 78084.2, 77882.7", \
            "78298.8, 78097.1, 77895.5" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "46191.5, 46017, 45844", \
            "46187.2, 46012.7, 45839.7", \
            "46174, 45999.6, 45826" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "73800.7, 73740.6, 73681.1", \
            "73805, 73744.9, 73685.4", \
            "73818.2, 73758, 73698.4" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "50764.1, 50494.4, 50226.5", \
            "50759.8, 50490.1, 50222.1", \
            "50746.6, 50477.1, 50208.4" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "45258.6, 45125.8, 44992.2", \
            "45258.3, 45125.6, 44992.2", \
            "45257.3, 45125.1, 44991.3" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "47051.4, 46947.6, 46843.1", \
            "47051.1, 46947.4, 46843.1", \
            "47050.2, 46946.8, 46842.3" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "!S";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "Q";
        sdf_cond : "(R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58768e+06, 1.64216e+06, 1.695e+06", \
            "1.58769e+06, 1.64217e+06, 1.69501e+06", \
            "1.58771e+06, 1.64218e+06, 1.69498e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "834282, 867879, 902439", \
            "834283, 867880, 902439", \
            "834282, 867904, 902438" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(~R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58721e+06, 1.64169e+06, 1.6945e+06", \
            "1.58722e+06, 1.6417e+06, 1.69451e+06", \
            "1.58727e+06, 1.64171e+06, 1.69448e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "834296, 867878, 902441", \
            "834297, 867878, 902441", \
            "834283, 867924, 902440" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.076e+06, 2.25321e+06, 2.42652e+06", \
            "2.07604e+06, 2.25324e+06, 2.42635e+06", \
            "2.07611e+06, 2.25297e+06, 2.42644e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.23929e+06, 2.43333e+06, 2.63221e+06", \
            "2.23932e+06, 2.43334e+06, 2.6314e+06", \
            "2.23933e+06, 2.43202e+06, 2.63142e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58768e+06, 1.64216e+06, 1.695e+06", \
            "1.58769e+06, 1.64217e+06, 1.69501e+06", \
            "1.58771e+06, 1.64218e+06, 1.69498e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "834282, 867879, 902439", \
            "834283, 867880, 902439", \
            "834282, 867904, 902438" \
          );
        }
      }
      timing () {
        related_pin : "R";
        timing_sense : positive_unate;
        timing_type : combinational_rise;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.48445e+06, 3.69734e+06, 3.90465e+06", \
            "3.48447e+06, 3.69736e+06, 3.90446e+06", \
            "3.48414e+06, 3.69644e+06, 3.90447e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.44087e+06, 2.63594e+06, 2.83615e+06", \
            "2.44075e+06, 2.63594e+06, 2.83599e+06", \
            "2.4415e+06, 2.63616e+06, 2.83634e+06" \
          );
        }
      }
      timing () {
        related_pin : "S";
        sdf_cond : "R";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "R";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.4503e+06, 1.50777e+06, 1.56322e+06", \
            "1.45031e+06, 1.50777e+06, 1.56319e+06", \
            "1.45038e+06, 1.50781e+06, 1.56318e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "836957, 870735, 905668", \
            "836956, 870734, 905629", \
            "836962, 870732, 905470" \
          );
        }
      }
      timing () {
        related_pin : "S";
        sdf_cond : "~R";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!R";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.45038e+06, 1.50792e+06, 1.56353e+06", \
            "1.45039e+06, 1.50792e+06, 1.56363e+06", \
            "1.45047e+06, 1.50796e+06, 1.56344e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "859622, 891708, 925385", \
            "859620, 891707, 925169", \
            "859632, 891704, 925373" \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.73973e+06, 1.91168e+06, 2.08089e+06", \
            "1.73974e+06, 1.91168e+06, 2.08089e+06", \
            "1.73978e+06, 1.91167e+06, 2.08085e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.26753e+06, 2.46548e+06, 2.6673e+06", \
            "2.26754e+06, 2.46549e+06, 2.6673e+06", \
            "2.26758e+06, 2.46625e+06, 2.6673e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.45038e+06, 1.50792e+06, 1.56353e+06", \
            "1.45039e+06, 1.50792e+06, 1.56363e+06", \
            "1.45047e+06, 1.50796e+06, 1.56344e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "859622, 891708, 925385", \
            "859620, 891707, 925169", \
            "859632, 891704, 925373" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "45258.6, 45125.8, 44992.2", \
            "45258.3, 45125.6, 44992.2", \
            "45257.3, 45125.1, 44991.3" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "47051.4, 46947.6, 46843.1", \
            "47051.1, 46947.4, 46843.1", \
            "47050.2, 46946.8, 46842.3" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "R";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "46191.5, 46017, 45844", \
            "46187.2, 46012.7, 45839.7", \
            "46174, 45999.6, 45826" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "R";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "50764.1, 50494.4, 50226.5", \
            "50759.8, 50490.1, 50222.1", \
            "50746.6, 50477.1, 50208.4" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "!R";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "17210.2, 17015.5, 16824.8", \
            "17209.8, 17015.1, 16824.7", \
            "17208.7, 17014, 16822.8" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "!R";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "19115.6, 18968.6, 18825", \
            "19115.3, 18968.3, 18825.1", \
            "19114.5, 18967.6, 18823.9" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "78281.3, 78079.9, 77878.4", \
            "78285.7, 78084.2, 77882.7", \
            "78298.8, 78097.1, 77895.5" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "46191.5, 46017, 45844", \
            "46187.2, 46012.7, 45839.7", \
            "46174, 45999.6, 45826" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "73800.7, 73740.6, 73681.1", \
            "73805, 73744.9, 73685.4", \
            "73818.2, 73758, 73698.4" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "50764.1, 50494.4, 50226.5", \
            "50759.8, 50490.1, 50222.1", \
            "50746.6, 50477.1, 50208.4" \
          );
        }
      }
    }
    pin (R) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5376;
      rise_capacitance : 94.5737;
      rise_capacitance_range (35.6325, 177.04);
      fall_capacitance : 94.5376;
      fall_capacitance_range (35.633, 176.655);
      internal_power () {
        when : "(!S * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "253211, 253211, 253210" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "239944, 239945, 239945" \
          );
        }
      }
      internal_power () {
        when : "(!S * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "256682, 256681, 256681" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "236474, 236474, 236474" \
          );
        }
      }
    }
    pin (S) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5376;
      rise_capacitance : 94.5737;
      rise_capacitance_range (35.6325, 177.04);
      fall_capacitance : 94.5376;
      fall_capacitance_range (35.633, 176.655);
      internal_power () {
        when : "(!R * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "253211, 253211, 253210" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "239944, 239945, 239945" \
          );
        }
      }
      internal_power () {
        when : "(!R * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "256682, 256681, 256681" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "236474, 236474, 236474" \
          );
        }
      }
    }
  }
cell (DFFX1) {
    area : 1413984;
    cell_leakage_power : 27447.7;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 31091;
      when : "(CP * D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 23519.1;
      when : "(CP * !D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 31278.2;
      when : "(!CP * D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 31278.4;
      when : "(!CP * D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 23759.8;
      when : "(!CP * !D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 23759.7;
      when : "(!CP * !D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 27447.7;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.8795e+06, 7.10341e+06, 7.32885e+06", \
            "6.87954e+06, 7.10365e+06, 7.32679e+06", \
            "6.87971e+06, 7.1036e+06, 7.32892e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.72421e+06, 2.91534e+06, 3.11133e+06", \
            "2.72422e+06, 2.91549e+06, 3.10827e+06", \
            "2.72422e+06, 2.91486e+06, 3.11134e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.10482e+06, 6.18744e+06, 6.26738e+06", \
            "6.10531e+06, 6.18758e+06, 6.26756e+06", \
            "6.10522e+06, 6.18739e+06, 6.26774e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.96163e+06, 1.98311e+06, 2.00788e+06", \
            "1.96228e+06, 1.98314e+06, 2.00788e+06", \
            "1.96161e+06, 1.98376e+06, 2.00788e+06" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "7.49547e+06, 7.72108e+06, 7.94492e+06", \
            "7.49333e+06, 7.72154e+06, 7.94427e+06", \
            "7.49193e+06, 7.71859e+06, 7.94406e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.71799e+06, 2.90848e+06, 3.10297e+06", \
            "2.71964e+06, 2.90827e+06, 3.10301e+06", \
            "2.7197e+06, 2.90965e+06, 3.10281e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "7.09658e+06, 7.17903e+06, 7.25886e+06", \
            "7.09594e+06, 7.17777e+06, 7.25729e+06", \
            "7.09064e+06, 7.1728e+06, 7.25292e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.95741e+06, 1.97902e+06, 2.00392e+06", \
            "1.95805e+06, 1.97817e+06, 2.0047e+06", \
            "1.95741e+06, 1.97822e+06, 2.00392e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(CP & D)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(CP * D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.5853e+06, 1.64019e+06, 1.69333e+06", \
            "1.58528e+06, 1.6402e+06, 1.69334e+06", \
            "1.58531e+06, 1.64025e+06, 1.69342e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "833276, 866864, 901418", \
            "833289, 866863, 901418", \
            "833294, 866853, 901406" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "~CP";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!CP";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58434e+06, 1.63896e+06, 1.69189e+06", \
            "1.58435e+06, 1.63899e+06, 1.6919e+06", \
            "1.5844e+06, 1.63906e+06, 1.69202e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "833322, 866883, 901487", \
            "833324, 866881, 901434", \
            "833316, 866890, 901452" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.07395e+06, 2.25141e+06, 2.42479e+06", \
            "2.07398e+06, 2.25118e+06, 2.42482e+06", \
            "2.07406e+06, 2.25126e+06, 2.42492e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.24693e+06, 2.44165e+06, 2.63953e+06", \
            "2.24693e+06, 2.44133e+06, 2.64005e+06", \
            "2.2469e+06, 2.44134e+06, 2.64009e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.5853e+06, 1.64019e+06, 1.69333e+06", \
            "1.58528e+06, 1.6402e+06, 1.69334e+06", \
            "1.58531e+06, 1.64025e+06, 1.69342e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "833276, 866864, 901418", \
            "833289, 866863, 901418", \
            "833294, 866853, 901406" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "201074, 200911, 200751", \
            "201074, 200911, 200750", \
            "201073, 200911, 200751" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "110845, 110667, 110490", \
            "110845, 110667, 110491", \
            "110846, 110669, 110492" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "205461, 205325, 205194", \
            "205461, 205325, 205193", \
            "205460, 205326, 205194" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "114408, 114257, 114109", \
            "114407, 114258, 114109", \
            "114409, 114259, 114111" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "204824, 204666, 204509", \
            "204820, 204660, 204503", \
            "204800, 204645, 204491" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "119457, 119284, 119113", \
            "119454, 119282, 119112", \
            "119452, 119280, 119108" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "210764, 210606, 210449", \
            "210752, 210594, 210439", \
            "210731, 210576, 210425" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "113528, 113355, 113185", \
            "113532, 113361, 113191", \
            "113530, 113362, 113174" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "IQ_bar";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "7.9134e+06, 8.14259e+06, 8.36656e+06", \
            "7.91511e+06, 8.14327e+06, 8.36444e+06", \
            "7.91377e+06, 8.143e+06, 8.36747e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.74064e+06, 2.93312e+06, 3.12886e+06", \
            "2.74254e+06, 2.93291e+06, 3.12703e+06", \
            "2.74209e+06, 2.93313e+06, 3.1287e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.04997e+06, 5.13048e+06, 5.20917e+06", \
            "5.05067e+06, 5.13095e+06, 5.2092e+06", \
            "5.05127e+06, 5.13124e+06, 5.20942e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.89545e+06, 1.91686e+06, 1.94316e+06", \
            "1.8955e+06, 1.9177e+06, 1.94316e+06", \
            "1.89622e+06, 1.91689e+06, 1.94218e+06" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "8.93209e+06, 9.16061e+06, 9.38593e+06", \
            "8.92943e+06, 9.15668e+06, 9.38069e+06", \
            "8.92237e+06, 9.15217e+06, 9.37686e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.74062e+06, 2.93018e+06, 3.1244e+06", \
            "2.74245e+06, 2.93157e+06, 3.12588e+06", \
            "2.74131e+06, 2.93414e+06, 3.12875e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.6168e+06, 5.69704e+06, 5.77538e+06", \
            "5.61626e+06, 5.69691e+06, 5.77484e+06", \
            "5.61646e+06, 5.69634e+06, 5.77514e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.89511e+06, 1.91581e+06, 1.94128e+06", \
            "1.89511e+06, 1.91671e+06, 1.94128e+06", \
            "1.89441e+06, 1.91576e+06, 1.94238e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(CP & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(CP * !D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58538e+06, 1.64027e+06, 1.69342e+06", \
            "1.58536e+06, 1.64028e+06, 1.69343e+06", \
            "1.58539e+06, 1.64033e+06, 1.69351e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "833293, 866884, 901439", \
            "833309, 866885, 901439", \
            "833313, 866868, 901426" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "~CP";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!CP";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58421e+06, 1.63884e+06, 1.69173e+06", \
            "1.58422e+06, 1.63886e+06, 1.69178e+06", \
            "1.5842e+06, 1.63888e+06, 1.69185e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "833287, 866847, 901434", \
            "833289, 866844, 901399", \
            "833280, 866854, 901416" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.074e+06, 2.25148e+06, 2.42499e+06", \
            "2.07402e+06, 2.25149e+06, 2.42489e+06", \
            "2.0741e+06, 2.25162e+06, 2.42499e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.24733e+06, 2.44166e+06, 2.64094e+06", \
            "2.24734e+06, 2.44124e+06, 2.64051e+06", \
            "2.24729e+06, 2.44206e+06, 2.63994e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.58538e+06, 1.64027e+06, 1.69342e+06", \
            "1.58536e+06, 1.64028e+06, 1.69343e+06", \
            "1.58539e+06, 1.64033e+06, 1.69351e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "833293, 866884, 901439", \
            "833309, 866885, 901439", \
            "833313, 866868, 901426" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "160687, 160523, 160362", \
            "160688, 160521, 160360", \
            "160688, 160524, 160362" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "132950, 132773, 132596", \
            "132950, 132772, 132596", \
            "132949, 132772, 132596" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "164276, 164141, 164008", \
            "164277, 164138, 164006", \
            "164278, 164141, 164008" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "137336, 137187, 137038", \
            "137336, 137186, 137038", \
            "137335, 137187, 137039" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "169663, 169501, 169344", \
            "169660, 169498, 169340", \
            "169656, 169497, 169340" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "136453, 136280, 136108", \
            "136448, 136275, 136103", \
            "136437, 136263, 136092" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "163731, 163570, 163414", \
            "163734, 163574, 163416", \
            "163725, 163575, 163410" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "142391, 142220, 142049", \
            "142380, 142212, 142040", \
            "142364, 142198, 142020" \
          );
        }
      }
    }
    pin (CP) {
      clock : true;
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 188.387;
      rise_capacitance : 188.387;
      rise_capacitance_range (71.2069, 352.04);
      fall_capacitance : 188.388;
      fall_capacitance_range (71.2074, 351.965);
      internal_power () {
        when : "(D * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "936349, 936350, 936350" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "937446, 937446, 937445" \
          );
        }
      }
      internal_power () {
        when : "(D * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "945010, 945010, 945012" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "928821, 928822, 928819" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "709260, 709260, 709260" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "710115, 710116, 710115" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "716333, 716334, 716335" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "703071, 703071, 703069" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 8283.33;
      rise_capacitance : 8283.33;
      rise_capacitance_range (7933.3, 8730.03);
      fall_capacitance : 8401.3;
      fall_capacitance_range (7987.28, 8961.82);
      internal_power () {
        when : "(!CP * Q * !Q_bar) + (!CP * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "938673, 938664, 938640" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "717816, 717812, 717802" \
          );
        }
      }
      internal_power () {
        when : "(!CP * Q * !Q_bar) + (!CP * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "949085, 949064, 949057" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "707537, 707518, 707506" \
          );
        }
      }
    }
    latch (IQ,IQ_bar) {
      data_in : "D";
      enable : "CP";
      power_down_function : "(!VDD) + (VSS)";
    }
  }
}
